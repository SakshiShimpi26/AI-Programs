#BFS

def bfsAlgorithm(graph,queue,visitedVertices,search):
  while len(queue)!=0:
    val=queue.pop(0)
    print(val)
    for x in graph[val]:
      visitedVertices.append(x)
      queue.append(x)
    
noOfVertices=eval(input("Enter No. of Vertices: "))
vertice=[]
for i in range(noOfVertices):
    v=eval(input("Enter vertex "+str(i)+" : "))
    vertice.append(v)

vertices=[]
for i in range(noOfVertices):
  e=eval(input("Enter no of edges for vertex  "+str(i)+" : "))
  a=[]
  for j in range(e):
    x=eval(input("Enter edges for vertex  "+str(i)+" : "))
    a.append(x)
  vertices.append(a)

print(vertice)
print(vertices)

graph =dict(zip(vertice,vertices))
print(graph)

visitedVertices=[]
src = eval(input("Enter source vertex: "))
search=eval(input("Enter Value to search: "))
queue=[]
queue.append(src)

print("BFS Sequence: ")
bfsAlgorithm(graph,queue,visitedVertices,search)
